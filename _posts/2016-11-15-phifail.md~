---
layout: post
type: math
title: The phi accrual failure detector
subtitle: An adaptive failure detection scheme
---

This post is the summary of the paper: _**The $$\varphi$$ accrual failure detector**_ by 
N. Hayashibara, X. Défago, and T.Katayama. In Proc. 23rd IEEE Intl. Symp. on Reliable 
Distributed Systems (SRDS'04), pp. 66-78, Florianópolis, Brazil, October 2004. IEEE CS Press. 

More at: [D2S Laboratory](http://www.coord.c.titech.ac.jp/)

---

## Problem definition

Detecting failure in a distributed system setting is a desirable task for many
obvious reasons. This paper introduces an implementation of an adaptive (accrual) 
failure detector. In this $$\varphi$$ accrual failure detector, the conditions of 
the network is accumulated and used to update the probabilistic model for failure 
suspicion. Compares to the existing models in 2004, which output of suspicion level 
is binary, this implementation has the advantage of returning a real-value suspicion level.
The authors compared their implementation to [Chen Fault Detection](http://chenfd)
and [Bertier Fault Detection](http://bertier). For the benchmark scheme, they 
set up two computers between Japan and Switzerland transferring "heart beat" signal
from Japan. They then later analyzed the collected data over a week and reported
the result.

- **Input**: A set of master processes $$\mathcal{M}$$ and a set of worker 
processes $$\mathcal{W}$$. The master processes are in charge of monitoring the 
worker processes.
- **Output**: An indicator of failure for each worker processes.
- **Assumption**: In this paper, for the shake of simplicity, the authors assumed
that the master processes will never crash. Furthermore, only one worker and one 
master scheme was discussed in this paper.

## Notations

_Note: The setting in this paper is sending heart beat signals from Japan ($$q$$)
to Switzerland._

| Notation | Explaination |
| :------- | :----------- |
| $$\varphi$$ | Suspection value. Higher value means the higher chance the failure happened. |
| $$\Phi$$ | Hyperparameter. Threshold for $$\varphi$$. |
| $$\Delta_i$$ | "Heart beat" signal period. |
| $$\Delta_{to}$$ | Timeout for transmission. |
| $$\Delta_{tr}$$ | Average transmission time experienced by the messages. |
| $$\alpha$$ | $$\Delta_{tr} \approx \Delta_{i} + \alpha$$ | 
| $$q$$ | Master process that monitors other process for failure dection. |
| $$p$$ | Worker process that sends "heart beat" signals. |
| $$T_D$$ | Time until q begins to suspect p permanently in case of failure happened. |
| $$\lambda_M$$ | Average mistake rate at which a failure detector generates wrong suspicions. |
| $$\lozenge P$$ | Eventually perfect failure detector class. |
| $$ susp\_level_p(t)$$ | Suspicion level of p at time t. |
| $$ T_{high}$$ | Dynamic threshold upperbounds $$susp\_level_p$$. |
| $$ T_{low}$$ | Dynamic threshold lowerbounds $$susp_level_p$$. |

## Method

As mentioned above, this paper proposed an abstract accrual failure detector
and a simple implementation of the idea with only 2 processes.
